#!/usr/bin/env python3

import requests
import argparse

parser = argparse.ArgumentParser(description="Set Sagemaker Studio Auto Stop timeout")
parser.add_argument("timeout_minutes",
                    help="Set timeout in minutes. Default is 60 min.",
                    nargs='?',
                    default=60)
args = parser.parse_args()

try:
    session = requests.Session()
    # Getting the xsrf token from Jupyter Server
    url1 = "http://localhost:8888/jupyter/default/tree"
    r1 = session.get(url1)
    if r1.status_code == 200:
        print(f"Cookies in response headers: {r1.headers['Set-Cookie']}")
    else:
        print(f"Error: Request to '{url1}' failed with status code {r1.status_code}")

    cookie = r1.headers['Set-Cookie']
    xsrf_str, *rest = cookie.split(";")
    _, xsrf = xsrf_str.split("=")

    # calls the idle_checker extension interface to set the timeout value
    uri2 = "http://localhost:8888/jupyter/default/sagemaker-studio-autoshutdown/idle_checker"
    r2 = session.post(uri2,
                      json={"idle_time": args.timeout_minutes, "keep_terminals": False},
                      params={"_xsrf": xsrf})
except requests.exceptions.ConnectionError:
    print(f"Unable to connect to jupyter. Check that the server is running")
    exit(1)

if r2.status_code == 200:
    print(f"Idle timeout set to {args.timeout_minutes} minutes")
else:
    print(f"Error: POST to '{uri2}' failed with status code {r2.status_code}")
    exit(2)
